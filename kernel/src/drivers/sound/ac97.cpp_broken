#include "ac97.h"
#include "../../io/ports.h"
#include "../../memory/heap.h"

PCIHeader0* AC97SoundCard;
uint16_t NativeAudioMixer;
uint16_t NativeAudioBusMaster;
BufferDescriptorList* BufferDescriptorList_p;

uint64_t* BDLs[32]; // buffers

void HandleAC97() {

}

void InitAC97(PCIDevice* device) {
    AC97SoundCard = (PCIHeader0*)device;

    NativeAudioMixer = AC97SoundCard->BAR0;
    NativeAudioBusMaster = AC97SoundCard->BAR1;

    AC97SoundCard->Header.Command |= 0b001;
    AC97SoundCard->Header.Command |= 0b100;

    outportw(NativeAudioMixer,0x1); //reset
    outportw(NativeAudioBusMaster + NativeAudioBusMaster_GlobalControlRegister,0x2); //intrerrupts disabled

    outportw(NativeAudioBusMaster + NativeAudioMixer_MasterVolume, 0b0000000000000); // lowest volume, no mute
    outportw(NativeAudioBusMaster + NativeAudioMixer_PCMVolume, 0b0000000000000); // lowest volume, no mute

    BufferDescriptorList_p = (BufferDescriptorList*)malloc(BufferDescriptorListLength * sizeof(BufferDescriptorList)); // allocate memory for buffer descriptor list
    memset(BufferDescriptorList_p,0,BufferDescriptorListLength * sizeof(BufferDescriptorList)); // zero everything

    for(int i = 0; i < 32;i++) {
        BDLs[i] = (uint64_t*)malloc(0x1000 * sizeof(BDLs[0])); //allocate memory for all buffers
        memset(BDLs[i],0,0x1000 * sizeof(BDLs[0])); // zero everything
        BufferDescriptorList_p[i].ControlLenght |= IntrerruptOnCompletion;
        BufferDescriptorList_p[i].Address = (uint32_t)(uint64_t)BDLs[i];
    }

    //pointing ac97 where our bdl are
    outportl(NativeAudioBusMaster + NativeAudioBusMaster_BufferDescriptorPCM,(uint64_t)(void*)BufferDescriptorList_p);

    //setting last valid index
    outportb(NativeAudioBusMaster + NativeAudioBusMaster_LastValidIndex,0x2);

    //setting volume
    outportw(NativeAudioBusMaster + NativeAudioMixer_MasterVolume, 0x2020); // max volume, no mute    

    //start playing nothing
    outportb(NativeAudioBusMaster + NativeAudioBusMaster_ControlRegisterPCM,inportb(NativeAudioBusMaster + NativeAudioBusMaster_ControlRegisterPCM) | RunPauseMaster);


/*
    //setting structs
    BAR0 = (NativeAudioMixer*)AC97SoundCard->BAR0;
    BAR1 = (NativeAudioBusMaster*)AC97SoundCard->BAR1;

    //enabling
    AC97SoundCard->Header.Command |= 0b001;
    AC97SoundCard->Header.Command |= 0b100;
    BAR1->GlobalControl = 0x2;
    BAR0->Reset = 0x1;
*/

    printf("AC 97' compatibile sound card detected!\n",AC97SoundCard->Header.Status);GlobalDisplay->update();
    while(1);
}